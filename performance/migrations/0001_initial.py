# Generated by Django 3.2.6 on 2021-09-10 22:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import performance.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=255)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PastPerformance',
            fields=[
                ('performance_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('concentration', models.IntegerField(default=0)),
                ('eyecontact', models.IntegerField(default=0)),
                ('clarity', models.IntegerField(default=0)),
                ('understanding', models.IntegerField(default=0)),
                ('confidence', models.IntegerField(default=0)),
                ('performance_datetime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('keywords', models.TextField()),
                ('question_grade', models.CharField(default='0', max_length=50)),
                ('tags', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PastPerformanceVideo',
            fields=[
                ('video_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=performance.models.user_directory_path)),
                ('performance_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pastPerformanceVideo', to='performance.pastperformance')),
            ],
        ),
        migrations.AddField(
            model_name='pastperformance',
            name='question_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performanceQuestion', to='performance.question'),
        ),
        migrations.AddField(
            model_name='pastperformance',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userPastPerformance', to=settings.AUTH_USER_MODEL),
        ),
    ]
